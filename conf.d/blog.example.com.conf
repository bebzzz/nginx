fastcgi_cache_path /var/cache/nginx/blogs 						# the directory to store the cached objects
		   levels=1:2								# the number of subdirectory levels used in the cache 
		   keys_zone=blog:10m 							# the name of the cache and the size of the memory space that will hold the keys and metadata info
		   max_size=1g 								# the maximum amount of storage we’re allowing NGINX to use for this cache
		   inactive=60m;							# the maximum cache lifetime of an item if it’s not accessed again


server {
    listen 80;
    server_name blog.example.com;

    root /var/www/blog.example.com;
    index index.php;									# index index.php instead of index.html

    access_log /var/log/nginx/access.log vhost;                                     	# custom log format, set in nginx.conf


    fastcgi_cache_key $scheme$request_method$host$request_uri;				# configuration of cache

    set $skip_cache 0;

    if ($request_uri ~* "/wp-admin") {							#  we don’t want to cache more dynamic content like the admin area of WordPress
	set $skip_cache 1;
    }

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        add_header X-Cache-Status $upstream_cache_status;				# variable that indicates whether the current request is a cache hit or miss
	fastcgi_index index.php;
        fastcgi_pass unix:/var/run/php-fpm.sock;					# proxy traffic to our WordPress site that is listening on a socket
	fastcgi_cache_bypass $skip_cache;						# skip checking the cache and not cache the returned response.
	fastcgi_no_cache $skip_cache;							
        fastcgi_cache blog;								# configuration of cache
	fastcgi_cache_valid 60m;
	include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}
