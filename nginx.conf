
user  nginx;
worker_processes  1;										# number of running workers

error_log  /var/log/nginx/error.log warn;							# severity levels: debug, info, notice, warn, error, crit, alert, emerg
pid        /var/run/nginx.pid;

load_module /etc/nginx/modules/ngx_http_modsecurity_module.so;					# Load ModSecurity dynamic module

events {
    worker_connections  1024;									# possible connectios per worker 
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format  vhost '$host $remote_addr - $remote_user [$time_local] "$request" '		# custom log format
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;


    gzip  on;											# enable compression 
    gzip_disable msie6;										# Ensure that weâ€™re not sending compressed responses to older versions of Internet Explorer
    gzip_proxied no-cache no-store private expired auth;					# enables compression checking response header for mentioned parameters

    gzip_types text/plain text/css application/x-javascript application/javascript test/xml application/xml application/xml+rss text/javascript image/x-icon image/bmp image/svg+xml;

    gzip_min_length 1024;									# minumum file size for compression is 1kb (default is 20 bytes)

    gzip_vary on;										# Adds a Vary: Accept-Encoding header. This tells intermediate caches (like CDNs) to treat the compressed and uncompressed version of the same resource as 2 separate entities

    gunzip on;											# enable decompression

    include /etc/nginx/conf.d/*.conf;
}
